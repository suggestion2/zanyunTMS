<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zanyun.tms.mapper.PaymentMapper">
	
	<select id="selectById" resultType="com.zanyun.tms.domain.front.Payment" parameterType="java.lang.Integer">
        select * from payment where id= #{id}
    </select>
	
	<select id="select" resultType="com.zanyun.tms.domain.front.Payment" parameterType="java.lang.Integer">
		select * from payment
		<where>
			<if test="number!=null">
				and `number` = #{number}
			</if>
			<if test="orderId!=null">
				and `orderId` = #{orderId}
			</if>
			<if test="type!=null">
				and `type` = #{type}
			</if>
			<if test="status!=null">
				and `status` = #{status}
			</if>
		</where>
	</select>
	
	<select id="selectList" resultType="com.zanyun.tms.domain.front.Payment" parameterType="java.util.Map">
		select * from `payment`
		<where>
			<if test="content!=null">
				and (`number` like CONCAT ('%',#{content},'%') or orderNum like CONCAT ('%',#{content},'%'))
			</if>
			<if test="status != null">
				and `status` = #{status}
			</if>
		</where>
		order by createTime DESC
		<if test="startIndex != null and pageSize != null">
			limit #{startIndex},#{pageSize}
		</if>
	</select>
	
	<select id="selectCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(1) from `payment`
		<where>
			<if test="content!=null">
				and (`number` like CONCAT ('%',#{content},'%') or orderNum like CONCAT ('%',#{content},'%'))
			</if>
			<if test="status != null">
				and `status` = #{status}
			</if>
		</where>
	</select>
	
	<insert id="insert" parameterType="com.zanyun.tms.domain.front.Payment" useGeneratedKeys="true" keyProperty="id">
		insert into payment
		(
		`number`,
		`orderId`,
		`orderNum`,
		`amount`,
		`type`,
		`updateBy`
		)
		values
		(
		#{number},
		#{orderId},
		#{orderNum},
		#{amount},
		#{type},
		#{updateBy}
		)
	</insert>
	
	<update id="update" parameterType="com.zanyun.tms.domain.front.Payment">
		update payment set
		`status` = #{status},
		`refundNum` = #{refundNum},
		`remark` = #{remark},
		`updateBy` = #{updateBy},
		`updateTime` = now()
		where `id` = #{id}
	</update>
	
	<update id="updateUnpaidPayment">
		update `payment` set `status` = -1 where `status` = 0 and `type` = 1 and now() &gt; DATE_ADD(`updateTime`,INTERVAL 15 MINUTE)
	</update>

</mapper>